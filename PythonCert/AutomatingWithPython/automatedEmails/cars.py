#!/usr/bin/env python3

import json
import locale
import sys
import reports
import emails

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])

def get_max_model(car_dict):
  sorted_list = [{'model':d['car']['car_model'] , 'sales':d['total_sales']} for d in sorted(car_dict, key=lambda x : x['total_sales'])]
  return sorted_list[-1]

def get_most_popular_year(car_dict):
  year_dict = {}
  for car in car_dict:
    if car['car']['car_year'] in year_dict:
      year_dict[car['car']['car_year']] += car['total_sales']
    else:
      year_dict[car['car']['car_year']] = car['total_sales']
  highest_year = max(year_dict, key=year_dict.get)
  return {'highest_year':highest_year,'sales_vol':year_dict[highest_year]}

def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
  max_model = get_max_model(data)
    # TODO: also handle most popular car_year
  max_year = get_most_popular_year(data)
  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    f"The {max_model['model']} has the most sales: {max_model['sales']}",
    f"The most popular year was {max_year['highest_year']} with {max_year['sales_vol']} sales."
  ]

  return f"{summary[0]} {summary[1]} {summary[2]}"


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  # TODO: turn this into a PDF report
#  print(cars_dict_to_table(data))
  reports.generate('/tmp/cars.pdf','Car report', summary, cars_dict_to_table(data))
  # TODO: send the PDF report as an email attachment
  message = emails.generate('automation@example.com','student-02-f909838ffa9b@example.com', 'Sales summary for last month', summary, '/tmp/cars.pdf')
  emails.send(message)

if __name__ == "__main__":
  main(sys.argv)
